# обязательный блок описания
__plugin__ = {
    "name": "sample module",
    "description": "пример минимального кода для модуля",
    "type": "test" ,
    "autorun":True, # на данный момент используется как команда к загрузке модуля (пока нет других настроек заменяющее это)
    "first_load": True, # переносит модуль в список загружаемых в первую очередь
    "thread":False    # нужно для модулей которые имеют собственные бесконечные циклы дабы не фризить работу кода
}

# не обязательно, но необходимо для того чтобы предоставить другим модулям "точку входа" в виде хуков
from data import app_data
ho = app_data.hook

# не обязательный блок
# запускает функции внутри класся если будут соответствующие точки входа в других местах кода
# добавить хук в код, чтобы предоставить другим приложениям работать с данными: ho("test_hook",text)
# все одноименные функции хуков собираются в массив и обрабатываются по очереди когда система обрацается к хукам.
class hook:
    def test_hook(data):
        print(data)
        
        
# запускается после помещения модуль в список загруженных модулей (приложения) 
def run():
    print("["+__name__.split(".")[-1]+"] OK")    

# пока не используется но обязательно***
def save():
    print("сохранение")

# пока не используется но обязательно***
def load():
    print("загрузка") 
    


