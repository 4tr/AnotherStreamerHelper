const siteUrl = "http://127.0.0.1:5000"; // üîπ URL —Å–∞–π—Ç–∞, –∑–∞ –∫–æ—Ç–æ—Ä—ã–º —Å–ª–µ–¥–∏–º
const statusEl = document.getElementById("status");

// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º service worker –¥–ª—è –æ—Ñ—Ñ–ª–∞–π–Ω-—Ä–∞–±–æ—Ç—ã
if ("serviceWorker" in navigator) {
console.log("cvgdghdsfghdsfgdsfgdsfgdfgdf")
  navigator.serviceWorker.register("static/sw.js")
    .then(() => console.log("‚úÖ Service Worker –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω"))
    .catch(err => console.error("SW error:", err));
}else{
    console.log("FAK")
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∞–π—Ç–∞ –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
async function checkSite() {
  try {
    const controller = new AbortController();
    const timeout = setTimeout(() => controller.abort(), 5000);

    const response = await fetch(siteUrl + "?t=" + Date.now(), {
      method: "HEAD",
      cache: "no-store",
      signal: controller.signal
    });

    clearTimeout(timeout);

    if (response.ok) {
      statusEl.textContent = "‚úÖ –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω! –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º...";
      localStorage.setItem("site_status", "online");
      //setTimeout(() => location.reload(), 2000);
    } else {
      throw new Error("–Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç");
    }
  } catch (e) {
    statusEl.textContent = "‚ùå –°–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–Ω–æ–≤–∞...";
    localStorage.setItem("site_status", "offline");
    setTimeout(checkSite, 10000);
  }
}

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑ localStorage
const last = localStorage.getItem("site_status");
if (last === "offline") {
  statusEl.textContent = "‚è≥ –°–∞–π—Ç –±—ã–ª –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—è–µ–º...";
}
checkSite();